<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.itcast.ssm.mapper.NodeMapper" >
  <resultMap id="BaseResultMap" type="cn.itcast.ssm.po.Node" >
    <id column="nodeid" property="nodeid" jdbcType="INTEGER" />
    <result column="nodeIp" property="nodeip" jdbcType="VARCHAR" />
    <result column="taskId" property="taskid" jdbcType="INTEGER" />
    <result column="cpuRate" property="cpurate" jdbcType="DOUBLE" />
    <result column="memoryRate" property="memoryrate" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    nodeid, nodeIp, taskId, cpuRate, memoryRate
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.itcast.ssm.po.NodeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from node
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from node
    where nodeid = #{nodeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from node
    where nodeid = #{nodeid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.itcast.ssm.po.NodeExample" >
    delete from node
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.itcast.ssm.po.Node" >
    insert into node (nodeid, nodeIp, taskId, 
      cpuRate, memoryRate)
    values (#{nodeid,jdbcType=INTEGER}, #{nodeip,jdbcType=VARCHAR}, #{taskid,jdbcType=INTEGER}, 
      #{cpurate,jdbcType=DOUBLE}, #{memoryrate,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="cn.itcast.ssm.po.Node" >
    insert into node
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="nodeid != null" >
        nodeid,
      </if>
      <if test="nodeip != null" >
        nodeIp,
      </if>
      <if test="taskid != null" >
        taskId,
      </if>
      <if test="cpurate != null" >
        cpuRate,
      </if>
      <if test="memoryrate != null" >
        memoryRate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="nodeid != null" >
        #{nodeid,jdbcType=INTEGER},
      </if>
      <if test="nodeip != null" >
        #{nodeip,jdbcType=VARCHAR},
      </if>
      <if test="taskid != null" >
        #{taskid,jdbcType=INTEGER},
      </if>
      <if test="cpurate != null" >
        #{cpurate,jdbcType=DOUBLE},
      </if>
      <if test="memoryrate != null" >
        #{memoryrate,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.itcast.ssm.po.NodeExample" resultType="java.lang.Integer" >
    select count(*) from node
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update node
    <set >
      <if test="record.nodeid != null" >
        nodeid = #{record.nodeid,jdbcType=INTEGER},
      </if>
      <if test="record.nodeip != null" >
        nodeIp = #{record.nodeip,jdbcType=VARCHAR},
      </if>
      <if test="record.taskid != null" >
        taskId = #{record.taskid,jdbcType=INTEGER},
      </if>
      <if test="record.cpurate != null" >
        cpuRate = #{record.cpurate,jdbcType=DOUBLE},
      </if>
      <if test="record.memoryrate != null" >
        memoryRate = #{record.memoryrate,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update node
    set nodeid = #{record.nodeid,jdbcType=INTEGER},
      nodeIp = #{record.nodeip,jdbcType=VARCHAR},
      taskId = #{record.taskid,jdbcType=INTEGER},
      cpuRate = #{record.cpurate,jdbcType=DOUBLE},
      memoryRate = #{record.memoryrate,jdbcType=DOUBLE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.itcast.ssm.po.Node" >
    update node
    <set >
      <if test="nodeip != null" >
        nodeIp = #{nodeip,jdbcType=VARCHAR},
      </if>
      <if test="taskid != null" >
        taskId = #{taskid,jdbcType=INTEGER},
      </if>
      <if test="cpurate != null" >
        cpuRate = #{cpurate,jdbcType=DOUBLE},
      </if>
      <if test="memoryrate != null" >
        memoryRate = #{memoryrate,jdbcType=DOUBLE},
      </if>
    </set>
    where nodeid = #{nodeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.itcast.ssm.po.Node" >
    update node
    set nodeIp = #{nodeip,jdbcType=VARCHAR},
      taskId = #{taskid,jdbcType=INTEGER},
      cpuRate = #{cpurate,jdbcType=DOUBLE},
      memoryRate = #{memoryrate,jdbcType=DOUBLE}
    where nodeid = #{nodeid,jdbcType=INTEGER}
  </update>
</mapper>